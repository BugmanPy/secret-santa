{"version":3,"sources":["Components/TextBox/style.js","Components/TextBox/TextBox.js","Confgs/colors.js","Components/Button/style.js","Components/Button/Button.js","Components/Table/style.js","Components/Table/table.js","Pages/HomePage/generateSantasList.js","Confgs/api.js","Confgs/constants.js","redux/slices/loader.js","images/Banner.png","Pages/HomePage/style.js","Pages/HomePage/HomePage.js","images/christmasWreath.png","Components/LoaderAnimation/style.js","Components/LoaderAnimation/LoaderAnimation.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Box","styled","div","TextBox","props","onTextAreaChange","placeholder","onChange","colors","primaryRed","lightRed","textBlack","pureWhite","lightGrey","ButtonWrapper","status","PrimaryButton","onClick","children","TableWrapper","Table","santasList","onExport","className","id","length","map","person","santa","recipient","Button","generateSantasList","participantsList","allSantas","allRecipients","forEach","recipientIndex","Math","floor","random","push","key","splice","writeToGoogleSheet","data","callback","a","console","log","fetch","method","headers","body","JSON","stringify","response","json","loaderSlice","createSlice","name","initialState","processing","reducers","setProcessingTrue","state","setProcessingFalse","actions","PageWrapper","section","visibility","BackgroundImage","ContentWrapper","FEEDHeader","h1","Home","dispatch","useDispatch","useState","listOfParticipants","setListOfParticipants","secretSantas","setSecretSantas","handleGoogleSheetUpload","e","list","target","value","trim","split","alert","LoaderWrapper","Loader","src","ChristmasWreath","alt","App","useSelector","loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","loaderReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.46fb67d5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Box = styled.div`\r\n  width: fit-content;\r\n \r\n  textarea{\r\n    width: 690px;\r\n    height: 175px;\r\n    margin-top: 10px;\r\n    padding: 12px 18px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-family: Gilroy-Regular;\r\n\r\n    ::placeholder {\r\n      font-size: 16px;\r\n      font-family: Gilroy-Regular;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {Box} from './style'\r\n\r\nfunction TextBox(props){\r\n    const {onTextAreaChange, placeholder} = props\r\n\r\n    return(\r\n        <Box>\r\n            <textarea placeholder={placeholder} onChange={onTextAreaChange}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TextBox","const colors = {\r\n    primaryRed:'#EA4630',\r\n    lightRed:'#f07767',\r\n    textBlack:\"#202020\",\r\n    pureWhite:\"#fff\",\r\n    lightGrey:'#E8E8E8'\r\n}\r\n\r\nexport default colors","import styled from \"styled-components\";\r\nimport colors from \"../../Confgs/colors\";\r\n\r\nexport const ButtonWrapper= styled.div`\r\n    button{\r\n        margin-top: 10px;\r\n        padding: 12px 18px;\r\n        color: ${props => props.status === \"Primary\" ? colors.pureWhite : colors.primaryRed};\r\n        border: ${props => props.status === 'Primary' ? 'none' : '1px solid '+colors.primaryRed};\r\n        border-radius: 5px;\r\n\r\n        background-color: ${props => props.status === \"Primary\" ? colors.primaryRed : colors.pureWhite};\r\n        text-transform: uppercase;\r\n        cursor: pointer;\r\n        transition: 0.25s all;\r\n    }\r\n\r\n    button:hover{\r\n        color: ${props => props.status === \"Primary\" ? colors.primaryRed : colors.pureWhite};\r\n        border: 1px solid ${colors.primaryRed};\r\n        background-color: ${props => props.status === \"Primary\" ? colors.pureWhite : colors.primaryRed};\r\n    }\r\n`","import React from \"react\";\r\nimport { ButtonWrapper } from \"./style\";\r\n\r\nfunction PrimaryButton(props){\r\n    const {onClick, children, status} = props\r\n    return(\r\n        <ButtonWrapper status={status}>\r\n            <button onClick={onClick}>{children}</button>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default PrimaryButton","import styled from \"styled-components\";\r\nimport colors from \"../../Confgs/colors\";\r\n\r\nexport const TableWrapper = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  margin-top: 10px;\r\n\r\n  .glassBackground{\r\n    width: 100%;\r\n    height: 100px;\r\n    padding: 10px;\r\n    padding-bottom:20px;\r\n    background:linear-gradient(135deg,rgba(255,255,255,0.1),rgba(255,255,255,0));\r\n    backdrop-filter: blur(10px);\r\n    -webkit-backdrop-filter:blur(10px);\r\n    border: 1px solid ${colors.lightGrey};\r\n    border-radius: 10px;\r\n\r\n    tr{\r\n      width: 100%;\r\n    }\r\n\r\n    th,td{\r\n      width: 50%;\r\n      padding: 12px 10px;\r\n    }\r\n\r\n    tr th:first-child,\r\n    tr td:first-child{\r\n      border: 1px solid ${colors.pureWhite};\r\n      border-radius: 10px 0 0 10px;\r\n    }\r\n    tr th:last-child,\r\n    tr td:last-child{\r\n      border: 1px solid ${colors.pureWhite};\r\n      border-radius: 0 10px 10px 0;\r\n    }\r\n    \r\n\r\n    #head_row{\r\n      background-color:${colors.primaryRed};\r\n      color:${colors.pureWhite}\r\n    }\r\n    td{\r\n      background-color: #F6EBEA;\r\n    }\r\n  }\r\n\r\n  .ButtonWrapper{\r\n    td{\r\n      background-color: transparent;\r\n      border: none !important;\r\n    }\r\n\r\n    #button_container{\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport { TableWrapper } from \"./style\";\r\n\r\nfunction Table(props) {\r\n  const { santasList, onExport } = props;\r\n  return (\r\n    <TableWrapper>\r\n      <table className=\"glassBackground\">\r\n        <tr id=\"head_row\">\r\n          <th>Santa</th>\r\n          <th>Recipient</th>\r\n        </tr>\r\n        {santasList?.length ? (\r\n          santasList.map((person) => (\r\n            <tr>\r\n              <td>{person.santa}</td>\r\n              <td>{person.recipient}</td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td>--</td>\r\n            <td>--</td>\r\n          </tr>\r\n        )}\r\n\r\n        {santasList?.length ? (\r\n          <tr className=\"ButtonWrapper\">\r\n          <td></td>\r\n          <td id=\"button_container\">\r\n            <Button onClick={onExport}>Export to spreadsheet</Button>\r\n          </td>\r\n        </tr>\r\n        ):(null)}\r\n\r\n        \r\n      </table>\r\n    </TableWrapper>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","function generateSantasList(participantsList){\r\n    const allSantas = [...participantsList]\r\n    const allRecipients = [...participantsList]\r\n    let santasList = []\r\n\r\n    allSantas.forEach(santa => {\r\n        let recipientIndex = Math.floor(Math.random() * allRecipients.length)\r\n\r\n        while(santa === allRecipients[recipientIndex]){\r\n            recipientIndex = Math.floor(Math.random() * allRecipients.length)\r\n        }\r\n        \r\n        santasList.push({\r\n            santa:santa,\r\n            recipient:allRecipients[recipientIndex],\r\n            key:santa\r\n        })\r\n        allRecipients.splice(recipientIndex,1)\r\n    })\r\n   \r\n    return santasList\r\n}\r\n\r\nexport default generateSantasList","import { googleSheetApi, sheetTabId } from \"./constants\";\r\n\r\nexport const writeToGoogleSheet = async (data, callback) => {\r\n  try {\r\n    console.log([data.map((santa) => [santa.santa, santa.recipient])]);\r\n    const dataList = data.map((santa) => [santa.santa, santa.recipient]);\r\n    const response = await fetch(`${googleSheetApi}?tabId=${sheetTabId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify([...(data.map((santa) => [santa.santa, santa.recipient])),['--------','--------']]),\r\n    });\r\n    await response.json();\r\n    callback(response);\r\n  } catch (err) {\r\n    callback(err);\r\n  }\r\n};\r\n","export const googleSheetApi = 'https://v1.nocodeapi.com/thejuss/google_sheets/POHxxonULjZMNLzP'\r\nexport const sheetTabId = 'Sheet1'","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const loaderSlice = createSlice({\r\n    name:'processing',\r\n    initialState:{\r\n        processing:false,\r\n    },\r\n    reducers:{\r\n        setProcessingTrue:(state) => {\r\n            state.processing = true\r\n        },\r\n        setProcessingFalse:(state) => {\r\n            state.processing = false\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setProcessingTrue,setProcessingFalse} = loaderSlice.actions\r\nexport default loaderSlice.reducer","export default __webpack_public_path__ + \"static/media/Banner.1a4d425d.png\";","import styled from \"styled-components\";\r\nimport colors from \"../../Confgs/colors\";\r\nimport BackgroundImage from '../../images/Banner.png'\r\n\r\nexport const PageWrapper = styled.section`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: ${props => props.visibility ? '100px':'100vh !important'};\r\n    min-height: 100vh !important;\r\n    max-height: fit-content  !important;\r\n    font-family: 'Gilroy-Medium';\r\n    background-image: url(${BackgroundImage});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n    pointer-events: ${props => props.visibility ? '':'none'};;\r\n    overflow: ${props => props.visibility ? 'scroll':'hidden !important'};\r\n   \r\n\r\n    p{\r\n        color: ${colors.textBlack};\r\n    }\r\n`\r\n\r\nexport const ContentWrapper = styled.div`\r\n    width: 90%;\r\n\r\n    #namesListBox{\r\n        margin-top:100px;\r\n    }\r\n\r\n    #tableBox{\r\n        margin-top: 50px;\r\n    }\r\n\r\n    .labelText{\r\n        font-size:25px;\r\n    }\r\n`\r\nexport const FEEDHeader = styled.h1`\r\n    margin-top: 56px;\r\n    color: ${colors.primaryRed};\r\n`","import React,{useState, useEffect} from \"react\";\r\n\r\nimport TextBox from '../../Components/TextBox/TextBox'\r\nimport Button from '../../Components/Button/Button'\r\nimport Table from '../../Components/Table/table'\r\nimport generateSantasList from \"./generateSantasList\";\r\nimport { writeToGoogleSheet } from \"../../Confgs/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {setProcessingTrue,setProcessingFalse} from '../../redux/slices/loader'\r\nimport {PageWrapper,ContentWrapper, FEEDHeader} from './style'\r\n\r\nconst sampleList = ['a','b','c','d','e','f','g','h']\r\n\r\nfunction Home(props){\r\n    const {visibility} = props\r\n    const dispatch = useDispatch()\r\n\r\n    const [listOfParticipants,setListOfParticipants] = useState([])\r\n    const [secretSantas,setSecretSantas] = useState([])\r\n\r\n    const onTextAreaChange = (e)=>{\r\n        const list = e.target.value.trim()\r\n        setListOfParticipants(list.split(','))\r\n    }\r\n\r\n    const onGenerateButtonClick = ()=>{\r\n        if(listOfParticipants.length > 2){\r\n            setSecretSantas(generateSantasList(listOfParticipants))\r\n        }else{\r\n            alert('incomplete list')\r\n        }\r\n         \r\n    }\r\n\r\n    const onExportButtonClick = ()=>{\r\n        dispatch(setProcessingTrue())\r\n        writeToGoogleSheet(secretSantas,handleGoogleSheetUpload)\r\n    }\r\n\r\n    const handleGoogleSheetUpload = (response)=>{\r\n        dispatch(setProcessingFalse())\r\n        console.log(response)\r\n    }\r\n\r\n    return(\r\n        <PageWrapper visibility={visibility}>\r\n            <ContentWrapper>\r\n                <FEEDHeader>FEED Secret Santa '21</FEEDHeader>\r\n\r\n                <div id=\"namesListBox\">\r\n                    <p className=\"labelText\">List Of Names</p>\r\n                    <TextBox onTextAreaChange={onTextAreaChange} placeholder={'eg.: John Doe, Mary Jane'}/>\r\n                    <Button onClick={onGenerateButtonClick} status=\"Primary\">{'Generate Santas'}</Button>\r\n                </div>\r\n                <div id=\"tableBox\">\r\n                    <p className=\"labelText\">Santas List</p>\r\n                    <Table onExport={onExportButtonClick} santasList={secretSantas}/>\r\n                </div>\r\n            </ContentWrapper>  \r\n        </PageWrapper>\r\n    )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/christmasWreath.670fd0af.png\";","import styled from \"styled-components\";\r\nimport colors from \"../../Confgs/colors\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    display: ${props => props.visibility ? 'block':'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index:100;\r\n\r\n    .background{\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100vh;\r\n        opacity: 0.5;\r\n        background-color: #000;\r\n    }\r\n\r\n    img{\r\n        position: absolute;\r\n        width: 150px;\r\n        height: auto;\r\n        opacity: 1 !important;\r\n        z-index:1000;\r\n        top: 40%;\r\n        left: 45%;\r\n      \r\n        animation-name: rotate;\r\n        animation-duration: 4s;\r\n        animation-iteration-count: infinite;\r\n    }\r\n\r\n    @keyframes rotate{\r\n        0% {transform: rotate(0deg)}\r\n        50% {transform: rotate(180deg)}\r\n        100% {transform: rotate(360deg)}\r\n    }\r\n\r\n    #loaderText{\r\n        position:absolute;\r\n        top: 60%;\r\n        left: 45%;\r\n        opacity: 1 !important;\r\n\r\n        font-size: 25px;\r\n        color: ${colors.pureWhite};\r\n        font-family: Gilroy-Regular;\r\n    }\r\n`","import React from \"react\";\r\nimport ChristmasWreath from '../../images/christmasWreath.png'\r\nimport {LoaderWrapper} from './style'\r\n\r\nfunction Loader(props){\r\n    const {visibility} = props\r\n    return(\r\n        <LoaderWrapper visibility={visibility}>\r\n        <div className=\"background\">\r\n        </div>\r\n        <img src={ChristmasWreath} alt=\"rotating christmas wreath\"/>\r\n        <p id=\"loaderText\">Please Wait ...</p>\r\n        </LoaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Loader","import Home from \"./Pages/HomePage/HomePage\";\nimport { useSelector } from 'react-redux'\nimport Loader from \"./Components/LoaderAnimation/LoaderAnimation\";\n\nfunction App() {\n  const processing = useSelector((state)=>state.loader.processing)\n  \n  return (\n    <div className=\"App\">\n      <Loader visibility={processing}/>\n      <Home visibility={!processing}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loaderReducer from './slices/loader'\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        loader:loaderReducer\r\n    }\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}